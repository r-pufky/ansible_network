# This file tells the frr package which daemons to start.
#
# Sample configurations for these daemons can be found in
# /usr/share/doc/frr/examples/.
#
# ATTENTION:
#
# When activating a daemon for the first time, a config file, even if it is
# empty, has to be present *and* be owned by the user and group "frr", else
# the daemon will not be started by /etc/init.d/frr. The permissions should
# be u=rw,g=r,o=.
# When using "vtysh" such a config file is also needed. It should be owned by
# group "frrvty" and set to ug=rw,o= though. Check /etc/pam.d/frr, too.
#
# The watchfrr, zebra and staticd daemons are always started.
#
bgpd={{ 'yes' if network_frr_daemon_bgpd_enable else 'no' }}
ospfd={{ 'yes' if network_frr_daemon_ospfd_enable else 'no' }}
ospf6d={{ 'yes' if network_frr_daemon_ospf6d_enable else 'no' }}
ripd={{ 'yes' if network_frr_daemon_ripd_enable else 'no' }}
ripngd={{ 'yes' if network_frr_daemon_ripngd_enable else 'no' }}
isisd={{ 'yes' if network_frr_daemon_isisd_enable else 'no' }}
pimd={{ 'yes' if network_frr_daemon_pimd_enable else 'no' }}
pim6d={{ 'yes' if network_frr_daemon_pim6d_enable else 'no' }}
ldpd={{ 'yes' if network_frr_daemon_ldpd_enable else 'no' }}
nhrpd={{ 'yes' if network_frr_daemon_nhrpd_enable else 'no' }}
eigrpd={{ 'yes' if network_frr_daemon_eigrpd_enable else 'no' }}
babeld={{ 'yes' if network_frr_daemon_babeld_enable else 'no' }}
sharpd={{ 'yes' if network_frr_daemon_sharpd_enable else 'no' }}
pbrd={{ 'yes' if network_frr_daemon_pbrd_enable else 'no' }}
bfdd={{ 'yes' if network_frr_daemon_bfdd_enable else 'no' }}
fabricd={{ 'yes' if network_frr_daemon_fabricd_enable else 'no' }}
vrrpd={{ 'yes' if network_frr_daemon_vrrpd_enable else 'no' }}
pathd={{ 'yes' if network_frr_daemon_pathd_enable else 'no' }}

#
# If this option is set the /etc/init.d/frr script automatically loads
# the config via "vtysh -b" when the servers are started.
# Check /etc/pam.d/frr if you intend to use "vtysh"!
#
vtysh_enable={{ 'yes' if network_frr_daemon_vtysh_enable else 'no' }}
zebra_options='{{ network_frr_daemon_zebra_options | default(["-A 127.0.0.1", "-s 90000000"]) | join(" ") }}'
bgpd_options='{{ network_frr_daemon_bgpd_options | default(["-A 127.0.0.1"]) | join(" ") }}'
ospfd_options='{{ network_frr_daemon_ospfd_options | default(["-A 127.0.0.1"]) | join(" ") }}'
ospf6d_options='{{ network_frr_daemon_ospf6d_options | default(["-A ::1"]) | join(" ") }}'
ripd_options='{{ network_frr_daemon_ripd_options | default(["-A 127.0.0.1"]) | join(" ") }}'
ripngd_options='{{ network_frr_daemon_ripngd_options | default(["-A ::1"]) | join(" ") }}'
isisd_options='{{ network_frr_daemon_isisd_options | default(["-A ::1"]) | join(" ") }}'
pimd_options='{{ network_frr_daemon_pimd_options | default(["-A 127.0.0.1"]) | join(" ") }}'
pim6d_options='{{ network_frr_daemon_pim6d_options | default(["-A ::1"]) | join(" ") }}'
ldpd_options='{{ network_frr_daemon_ldpd_options | default(["-A 127.0.0.1"]) | join(" ") }}'
nhrpd_options='{{ network_frr_daemon_nhrpd_options | default(["-A 127.0.0.1"]) | join(" ") }}'
eigrpd_options='{{ network_frr_daemon_eigrpd_options | default(["-A 127.0.0.1"]) | join(" ") }}'
babeld_options='{{ network_frr_daemon_babeld_options | default(["-A 127.0.0.1"]) | join(" ") }}'
sharpd_options='{{ network_frr_daemon_sharpd_options | default(["-A 127.0.0.1"]) | join(" ") }}'
pbrd_options='{{ network_frr_daemon_pbrd_options | default(["-A 127.0.0.1"]) | join(" ") }}'
staticd_options='{{ network_frr_daemon_staticd_options | default(["-A 127.0.0.1"]) | join(" ") }}'
bfdd_options='{{ network_frr_daemon_bfdd_options | default(["-A 127.0.0.1"]) | join(" ") }}'
fabricd_options='{{ network_frr_daemon_fabricd_options | default(["-A 127.0.0.1"]) | join(" ") }}'
vrrpd_options='{{ network_frr_daemon_vrrpd_options | default(["-A 127.0.0.1"]) | join(" ") }}'
pathd_options='{{ network_frr_daemon_pathd_options | default(["-A 127.0.0.1"]) | join(" ") }}'


# If you want to pass a common option to all daemons, you can use the
# "frr_global_options" variable.
#
frr_global_options='{{ network_frr_daemon_frr_global_options | join(" ") }}'


# The list of daemons to watch is automatically generated by the init script.
# This variable can be used to pass options to watchfrr that will be passed
# prior to the daemon list.
#
# To make watchfrr create/join the specified netns, add the the "--netns"
# option here. It will only have an effect in /etc/frr/<somename>/daemons, and
# you need to start FRR with "/usr/lib/frr/frrinit.sh start <somename>".
#
watchfrr_options='{{ network_frr_daemon_watchfrr_options | join(" ") }}'


# configuration profile
#
frr_profile='{{ network_frr_daemon_frr_profile | default("traditional") }}'


# This is the maximum number of FD's that will be available.  Upon startup this
# is read by the control files and ulimit is called.  Uncomment and use a
# reasonable value for your setup if you are expecting a large number of peers
# in say BGP.
#
MAX_FDS={{ network_frr_daemon_max_fds | default(1024) }}


# For any daemon, you can specify a "wrap" command to start instead of starting
# the daemon directly. This will simply be prepended to the daemon invocation.
# These variables have the form daemon_wrap, where 'daemon' is the name of the
# daemon (the same pattern as the daemon_options variables).
#
# Note that when daemons are started, they are told to daemonize with the `-d`
# option. This has several implications. For one, the init script expects that
# when it invokes a daemon, the invocation returns immediately. If you add a
# wrap command here, it must comply with this expectation and daemonize as
# well, or the init script will never return. Furthermore, because daemons are
# themselves daemonized with -d, you must ensure that your wrapper command is
# capable of following child processes after a fork() if you need it to do so.
#
# If your desired wrapper does not support daemonization, you can wrap it with
# a utility program that daemonizes programs, such as 'daemonize'. An example
# of this might look like:
#
# bgpd_wrap="/usr/bin/daemonize /usr/bin/mywrapper"
#
# This is particularly useful for programs which record processes but lack
# daemonization options, such as perf and rr.
#
# If you wish to wrap all daemons in the same way, you may set the "all_wrap"
# variable.
#
all_wrap='{{ network_frr_daemon_all_wrap | default("") }}'
bgpd_wrap='{{ network_frr_daemon_bgpd_wrap | default("") }}'
ospfd_wrap='{{ network_frr_daemon_ospfd_wrap | default("") }}'
ospf6d_wrap='{{ network_frr_daemon_ospf6d_wrap | default("") }}'
ripd_wrap='{{ network_frr_daemon_ripd_wrap | default("") }}'
ripngd_wrap='{{ network_frr_daemon_ripngd_wrap | default("") }}'
isisd_wrap='{{ network_frr_daemon_isisd_wrap | default("") }}'
pimd_wrap='{{ network_frr_daemon_pimd_wrap | default("") }}'
pim6d_wrap='{{ network_frr_daemon_pim6d_wrap | default("") }}'
ldpd_wrap='{{ network_frr_daemon_ldpd_wrap | default("") }}'
nhrpd_wrap='{{ network_frr_daemon_nhrpd_wrap | default("") }}'
eigrpd_wrap='{{ network_frr_daemon_eigrpd_wrap | default("") }}'
sharpd_wrap='{{ network_frr_daemon_sharpd_wrap | default("") }}'
pbrd_wrap='{{ network_frr_daemon_pbrd_wrap | default("") }}'
bfdd_wrap='{{ network_frr_daemon_bfdd_wrap | default("") }}'
fabricd_wrap='{{ network_frr_daemon_fabricd_wrap | default("") }}'
vrrpd_wrap='{{ network_frr_daemon_vrrpd_wrap | default("") }}'
pathd_wrap='{{ network_frr_daemon_pathd_wrap | default("") }}'
